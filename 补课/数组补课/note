1.学习数组常用方法需要注意4点：
    1.方法的作用
    2.需要传什么参数
    3.是否有返回值，返回值是什么
    4.原数组是否发生改变
2.数组常用方法分类学习
第一类：增加，删除，替换
    1.push:作用：给数组末尾添加新内容；
         返回值：数组的最新长度
         原数组发生改变
    2.unshift:作用：给数组开头添加新内容；
         返回值：数组的最新长度
         原数组发生改变
    3.pop:作用：删除数组最后一项
        返回值：被删除的内容
        原数组发生改变
    4.shift:作用：删除数组第一项
        返回值：被删除的内容
        原数组发生改变
    5.splice:
        splice(n,m) 作用：从索引n开始，删除m个； 返回值：被删除的数据以一个新数组的形式返回；原数组发生改变；
        splice(n,0,x) 作用：从索引n开始，删除0个；添加x的新内容； 返回值：空数组； 原数组发生改变；
        splice(n,m,x) 作用：从索引n开始，删除m个，替换成x新内容；返回值：被删除的数据以一个新数组的形式返回；原数组发生改变；
第二类：查找和克隆
    6.查找：slice(n,m) 作用：截取（查找）索引n到m，但是不包含m;
    克隆：1.slice(0)/slice()
         2.ary.concat();
    7.数组拼接：ary1.concat(ary2,ary3...)
第三类：数组的排列和排序
    8.排序 sort(function(a,b){return a-b}) 返回值：排序后的数组； 原数组发生改变；
    9.排列-数组翻转 reverse(); 返回值：翻转后的数组； 原数组发生改变；
第四类 数组转字符串
    10.toString() 作用：把数组转成字符串； 返回值：以逗号分隔的字符串； 原数组没发生改变；
    11.join(拼接字符) 作用：把数组转成任意形式拼接的字符串； 返回值：任意形式拼接的字符串； 原数组没有发生改变；
    join('+')配合eval可以实现求和，其他的-，*，/类型；
    eval() 把字符串作为JS代码来执行；
第五类 不兼容，但很常用的方法
    12.indexOf() 没找到对应的内容，返回-1； 找到，返回对应内容的索引；
    13.forEach();
    ary.forEach(function(item,index){//item:数组中的每一项； index：索引
            console.log(item+'=>'+index)
    })
    14.map(); 用法和forEach()一样，但是他有返回值；
    var res=ary4.map(function(item,index){
        console.log(item+'=>'+index)
        return item*100;
    })
三。总结性的东西
1.删除数组最后一项
    1.ary.pop();
    2.ary.splice(ary.length-1,1)
    3.ary.splice(ary.length-1);
    4.ary.length--; ary.length=ary.length-1; ary.length-=1;
2.给数组最后添加一项
    1.ary.push('如花')
    2.ary.splice(ary.length,0,'');
    3.ary[ary.length]='';
3.清空数组；
    1.ary.splice(0)
    2.ary4=[];
    3.ary4.length=0;
四。数组和对象的关系：数组也是对象，它也有属性名和属性值；它的属性名实际上就是他的索引；









