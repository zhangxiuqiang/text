1.JS中复合样式的写法:不能写横杠，必须第二个单词的首字母大写；
在CSS中：background-color
在JS中：backgroundColor
2.需求：如果我想拿到div这个元素，请问，有几种方法？
  第一种写法；
  var oDiv=document.getElementById('div1');
  oDiv.style.backgroundColor='green';
  第二种写法
  var oDiv=document.getElementsByTagName('div')[0];
  如果获取的是一个元素，必须得写[0]，否则无法给他加样式；
3.对象只包含两部分：属性+方法
属性：是物体身上固有的特征，比如：我们鼻子眼睛嘴；
方法：就是能干什么事情？ 比如：跳舞，打代码，看书。。。
在JS中属性和方法的区别：属性没有括号（obj.name）;方法有括号--aa();
4.关于函数：函数只包含两部分--定义和调用
1）定义--但是：函数定义阶段不会执行；
function 函数名(){
    执行语句。。。
}
2）调用：函数名()；--调用后函数才能真正的执行；
例子：
    需求：点击oDiv时，执行函数aa;
    oDiv.onclick=aa;//把函数表达式做为值赋值给oDiv.onclick事件；只有当oDiv的事件被触发的时候，才会执行aa这个函数；
    function aa(){
        alert(123)
    }
    //aa();//函数名aa代表了aa整个函数；但aa不能执行；真正的执行是调用；调用--函数名+（）--aa()

函数包含匿名函数和有名字的函数；
    匿名函数：
    1.把匿名函数当作值赋值给对象的事件；
    oDiv.onclick=function(){
            alert(123)
    };
5.关于this
1）当元素oDiv上的事件被触发的时候，会执行一个函数，函数中的this，指的是当前oDiv这个元素；
6.操作属性的两种方式：
    1）“.”;
    2)[];
    JS中操作元素的class属性，只能写成obj.className;
    自定义属性：
    JS元素上的自定义属性，用console.dir()可以看到，但是，在element也卡中，元素标签上看不到；
7.循环
1）for循环
2）for in 循环
3）while 循环
4）do while 循环
8.运算符
算术：+ - * / %
% 就是用来取余数的；--小技巧：有几种情况，就%几；
作业：1）先用%实现跟行换色；
     2）当鼠标移入：显示固定的背景色；鼠标移出，回复他原有的背景色；
()小括号有提高优先级的作用；
9.关于数字的方法
  数字.toFixed(要保留的小数的个数) eg:alert((23.1%5).toFixed(3));
10.判断
1）if elseif elseif ....else...
if(条件1){
    执行语句1
}else if(条件2){
    执行语句2
}else{
    执行语句3
}
2)
switch (值){
    case 值1:
        执行语句1
        break;
    case 值2:
        执行语句2
        break;
    default :
        执行语句3;
}
3)三元表达式/三目/三元运算符
基本语法：条件？语句1：语句2；
例子：'2'===2?console.log('两个相等'):console.log('两个不相等');
如果if 语句中没有else的话，就不用执行语句2:
2=='2'?console.log('两个相等'):null;

11.调试的顺序
1）先打开控制台看有没有报错；如果有报错，看报错在第几行
2）如果控制台没有报错
从上倒下检查代码能否正常执行；一块一块测试并用我们教过的输出方法，输出测试；
12.自定义属性
需求：点击每个按钮的时候，弹出他对应的索引；
    for(var i=0; i<aBtn.length; i++){
        aBtn[i].index=i;//自定义属性
        aBtn[i].onclick=function(){
            //alert(i)//当我触发点击事件的时候，循环已经结束，i=4;为了解决i值的问题，我们让一个东西跟循环同步进步，保存每个正常的i值；
            alert(this.index);
        }
    }
循环中，如果有点击事件，触发一个函数，函数中一定不能直接用i；因为，此时，循环早已经结束，i已经是最大值；
13.其他数据类型转为Boolean数据类型：
    1）Boolean() ->true false
    2)!取反
    !3：先判断3是否为真，接着取反--如果是真，取反后是假；
    3)!!也是进行布尔值的转换，相当于没转
    4）if（条件）:if语句中，如果条件为一个值，也会进行布尔值的判断；
    5）if(表达式) -->if('3'==3):true  if('3'===3):false
14.隐式数据类型的转换
1）==:比较转换后的值，不比较数据类型；
2）-,*,/,%
15.对象的增删改查
1）对象的增加,更改:对象.属性名=xxx；如果属性名存在的话，相当于更改；否则，相当于添加
2）对象的查找 eg:alert(obj.name)
3)对象的删除
  obj.name=null; //--假删除
  delete obj.name; //--真删除  结果：如果再获取--undefined;
16.对象的循环--for in循环
17.当对象的属性名为数字的情况下，对象会出现的情况
1）当属性名为数字的时候，打印出来时，是按照属性名数字大小排列的；
eg: var obj={0:'李慧',18:'張直',9:'郭园园',2:'岳飞宇'};
2) 对象中，如果想拿到对应的属性值的话，属性名放在[]中，一定要加引号，但是数字除外；
 console.log(obj['0'])
 console.log(obj[18])
18.基本数据类型和引用数据类型的区别：
一句话区别：基本数据类型是对值的操作，引用数据类型是对地址的操作；
基本数据类型也叫做值类型，直接按值来操作
引用数据类型是按引用地址来操作：
		-a、开辟一个空间地址
		-b、把对象的属性名和属性值都放在这个空间中；
		-c、把空间地址赋值给变量名；
19.if语句的多种写法
1）if(条件){执行语句1}else{执行语句2}；
2）条件?执行语句1:执行语句2;
3)当语句2不存在的情况下：条件?执行语句1:null;
4)如果if语句中没有else:if(条件) 执行语句1；
5）&& 和 || 在if语句中的应用：
走if语句的 &&: 条件&&语句1；
走else语句的 ||: 条件||语句2；












